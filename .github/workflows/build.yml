name: Build CI

on:
  push:
    branches: [ master ]
    paths-ignore:
      - '**.md'
      - '**.txt'
      - '.github/**'
      - '!.github/workflows/**'
  workflow_dispatch:

jobs:
  build:
    name: Build CI
    runs-on: ubuntu-latest
    if: ${{ !startsWith(github.event.head_commit.message, '[skip ci]') }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Gradle wrapper validation
        uses: gradle/wrapper-validation-action@v1

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: '17'

      - name: Write key
        if: github.event_name != 'pull_request' && github.ref == 'refs/heads/master'
        run: |
          echo KEYSTORE_FILE=`pwd`/key.jks >> local.properties
          echo KEYSTORE_PASSWORD='${{ secrets.KEYSTORE_PASSWORD }}' >> local.properties
          echo KEYSTORE_ALIAS='${{ secrets.KEYSTORE_ALIAS }}' >> local.properties
          echo KEYSTORE_ALIAS_PASSWORD='${{ secrets.KEYSTORE_ALIAS_PASSWORD }}' >> local.properties
          echo "${{ secrets.KEYSTORE }}" | base64 --decode > key.jks

      - name: Cache gradle dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-deps-app-${{ hashFiles('**/build.gradle') }}
          restore-keys: |
            gradle-deps

      - name: Build with Gradle
        id: buildApk
        run: |
          chmod +x ./gradlew
          ./gradlew :app:aRelease :app:aDebug
          echo "::set-output name=debugName::`ls app/build/outputs/apk/debug/*-debug.apk | grep -Po '[^/]*?(?=\.apk)' `"
          echo "::set-output name=releaseName::`ls app/build/outputs/apk/release/*-release.apk | grep -Po '[^/]*?(?=\.apk)' `"

      - name: Upload debug
        if: success()
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.buildApk.outputs.debugName }}
          path: "app/build/outputs/apk/debug/*-debug.apk"

      - name: Upload release
        if: success()
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.buildApk.outputs.releaseName }}
          path: "app/build/outputs/apk/release/*-release.apk"

      - name: Upload mappings
        uses: actions/upload-artifact@v2
        with:
          name: mappings
          path: "app/build/outputs/mapping/release"
